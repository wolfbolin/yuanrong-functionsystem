# Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cmake_minimum_required(VERSION 3.16.1)

project(etcdapi LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)

set(INSTALL_BIN_DIR "${CMAKE_INSTALL_PREFIX}/bin" CACHE PATH "Installation directory for executables")
set(INSTALL_LIB_DIR "${CMAKE_INSTALL_PREFIX}/lib" CACHE PATH "Installation directory for libraries")
set(INSTALL_INC_DIR "${CMAKE_INSTALL_PREFIX}/include" CACHE PATH "Installation directory for headers")

set(gRPC_VERSION 1.65.4)

find_package(Protobuf REQUIRED PATHS ${protobuf_ROOT} CONFIG)
find_package(c-ares REQUIRED PATHS ${c-ares_ROOT} CONFIG)
find_package(absl REQUIRED PATHS ${absl_ROOT} CONFIG)
find_package(re2 REQUIRED PATHS ${re2_ROOT} CONFIG)
find_package(gRPC ${gRPC_VERSION} REQUIRED PATHS ${grpc_ROOT} CONFIG)

include_directories(${CMAKE_CURRENT_LIST_DIR})

aux_source_directory(etcd/api/etcdserverpb ETCD_PROTO_SRCS)
aux_source_directory(etcd/api/mvccpb ETCD_PROTO_SRCS)
aux_source_directory(etcd/api/authpb ETCD_PROTO_SRCS)
aux_source_directory(etcd/server/etcdserver/api/v3election/v3electionpb ETCD_PROTO_SRCS)
aux_source_directory(etcd/server/etcdserver/api/v3lock/v3lockpb ETCD_PROTO_SRCS)
aux_source_directory(google/api ETCD_PROTO_SRCS)
aux_source_directory(gogoproto ETCD_PROTO_SRCS)

set(ETCDAPI_PROTO etcdapi_proto)
add_library(${ETCDAPI_PROTO} STATIC ${ETCD_PROTO_SRCS})
target_link_libraries(${ETCDAPI_PROTO} ${PROTOBUF_LIBRARIES} utf8_range::utf8_validity gRPC::grpc++)
target_include_directories(${ETCDAPI_PROTO} PUBLIC ${protobuf_INCLUDE_DIR})
target_compile_options(${ETCDAPI_PROTO} PRIVATE "-fvisibility=hidden")
install(TARGETS ${ETCDAPI_PROTO}
        RUNTIME DESTINATION "${INSTALL_BIN_DIR}"
        ARCHIVE DESTINATION "${INSTALL_LIB_DIR}"
        LIBRARY DESTINATION "${INSTALL_LIB_DIR}")

file(COPY ${CMAKE_SOURCE_DIR}/ DESTINATION ${CMAKE_INSTALL_PREFIX}/include/ FILES_MATCHING PATTERN "*.h")